"use strict";(self.webpackChunk=self.webpackChunk||[]).push([[48],{4308:(e,a,s)=>{s.r(a),s.d(a,{default:()=>y});var n=s(4386);const l=(0,n._)("h1",{id:"lua-api",tabindex:"-1"},[(0,n._)("a",{class:"header-anchor",href:"#lua-api","aria-hidden":"true"},"#"),(0,n.Uk)(" LUA API")],-1),o=(0,n.Uk)("The system is implemented using "),r={href:"https://www.lua.org/manual/5.4/manual.html",target:"_blank",rel:"noopener noreferrer"},t=(0,n.Uk)("Lua5.4"),p=(0,n.Uk)("."),i=(0,n.uE)("<li>Supports most native lua functions (except for a few dangerous APIs)</li><li>Can support two file types compiled <code>.psr</code> and <code>.lua</code></li><li>The compiled <code>.psr</code> is the downloaded finished script, which contains <code>protected </code>lua and res<code> resources</code>, which cannot be changed</li><li><code>.lua</code> script is written by yourself and can be changed</li><li>After the <code>.lua</code> script is written, you can choose to use tools to compile it as a <code>.psr</code> file and publish it</li>",5),c=(0,n.uE)('<h2 id="base-library" tabindex="-1"><a class="header-anchor" href="#base-library" aria-hidden="true">#</a> Base library</h2><ul><li><a href="#op">op</a> provides color recognition function</li><li><a href="#game">game</a> provides host operation function</li></ul><h2 id="host-library" tabindex="-1"><a class="header-anchor" href="#host-library" aria-hidden="true">#</a> Host library</h2>',3),d=(0,n.Uk)("xbox"),u=(0,n.Uk)("playstation"),h=(0,n.uE)('<h2 id="basic-introduction" tabindex="-1"><a class="header-anchor" href="#basic-introduction" aria-hidden="true">#</a> Basic introduction</h2><h3 id="scripting-infrastructure" tabindex="-1"><a class="header-anchor" href="#scripting-infrastructure" aria-hidden="true">#</a> Scripting infrastructure</h3><ul><li>The script consists of several LUA files and res directory</li><li>The script must contain a <code>main</code> function</li><li>When the script engine starts, it will automatically call the <code>main</code> function in the script to start running<br> A minimal script:</li></ul><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">function</span><span style="color:#C9D1D9;"> </span><span style="color:#D2A8FF;">main</span><span style="color:#C9D1D9;">()   </span></span>\n<span class="line"><span style="color:#C9D1D9;">        </span><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;hello world&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#FF7B72;">end</span><span style="color:#C9D1D9;">   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h3 id="global-variables" tabindex="-1"><a class="header-anchor" href="#global-variables" aria-hidden="true">#</a> Global variables</h3><p>All variables starting with an underscore are system variables and cannot be modified</p><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">  _APP_VERSION </span><span style="color:#8B949E;">-- system version number   </span></span>\n<span class="line"><span style="color:#C9D1D9;">  _PATH </span><span style="color:#8B949E;">-- the directory where the current script is located   </span></span>\n<span class="line"><span style="color:#C9D1D9;">  _FILENAME </span><span style="color:#8B949E;">-- the filename of the currently running script (entry file)   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br></div></div><h2 id="global-function" tabindex="-1"><a class="header-anchor" href="#global-function" aria-hidden="true">#</a> Global function</h2><h3 id="print" tabindex="-1"><a class="header-anchor" href="#print" aria-hidden="true">#</a> print</h3><h4 id="function-introduction" tabindex="-1"><a class="header-anchor" href="#function-introduction" aria-hidden="true">#</a> Function introduction:</h4><blockquote><p>Display information</p></blockquote><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Hello World!&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="wait" tabindex="-1"><a class="header-anchor" href="#wait" aria-hidden="true">#</a> wait</h3><h4 id="function-introduction-1" tabindex="-1"><a class="header-anchor" href="#function-introduction-1" aria-hidden="true">#</a> Function introduction:</h4><blockquote><p>Make the script wait for a certain amount of time before running down</p></blockquote><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Hello World!&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#79C0FF;">wait</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;">) </span><span style="color:#8B949E;">-- wait for one second   </span></span>\n<span class="line"><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Hello World!&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#79C0FF;">wait</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0.2</span><span style="color:#C9D1D9;">) </span><span style="color:#8B949E;">-- wait 0.2 seconds   </span></span>\n<span class="line"><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Hello World!&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="sleep" tabindex="-1"><a class="header-anchor" href="#sleep" aria-hidden="true">#</a> sleep</h3><h4 id="function-introduction-2" tabindex="-1"><a class="header-anchor" href="#function-introduction-2" aria-hidden="true">#</a> Function introduction:</h4><blockquote><p>Let the script wait for a certain amount of time before running down, the same as the function above, but the parameter is milliseconds</p></blockquote><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Hello World!&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#79C0FF;">sleep</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">1000</span><span style="color:#C9D1D9;">) </span><span style="color:#8B949E;">-- wait for one second   </span></span>\n<span class="line"><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Hello World!&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#79C0FF;">sleep</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">200</span><span style="color:#C9D1D9;">) </span><span style="color:#8B949E;">-- wait 0.2 seconds   </span></span>\n<span class="line"><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Hello World!&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h3 id="load-module" tabindex="-1"><a class="header-anchor" href="#load-module" aria-hidden="true">#</a> load_module</h3><h4 id="load-a-module" tabindex="-1"><a class="header-anchor" href="#load-a-module" aria-hidden="true">#</a> Load a module</h4><blockquote><p>Load a three-party library from the script directory. Once successfully loaded, you can use the functions provided by the three-party library</p></blockquote><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">local</span><span style="color:#C9D1D9;"> ret </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">load_module</span><span style="color:#C9D1D9;">( _PATH  </span><span style="color:#FF7B72;">..</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;base.psr&quot;</span><span style="color:#C9D1D9;">,_ENV)   </span></span>\n<span class="line"><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> ret </span><span style="color:#FF7B72;">then</span><span style="color:#C9D1D9;">   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;load module success&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;">   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;load module failed&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#FF7B72;">end</span><span style="color:#C9D1D9;">   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><hr><h2 id="op" tabindex="-1"><a class="header-anchor" href="#op" aria-hidden="true">#</a> op</h2><h3 id="ver" tabindex="-1"><a class="header-anchor" href="#ver" aria-hidden="true">#</a> Ver</h3><blockquote><p>Returns the version number of the current op</p></blockquote><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">( op.</span><span style="color:#79C0FF;">Ver</span><span style="color:#C9D1D9;">() )   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="setpath" tabindex="-1"><a class="header-anchor" href="#setpath" aria-hidden="true">#</a> SetPath</h3><blockquote><p>Set the global path. After this path is set, in all interface calls, related files are relative to this path. For example, pictures, fonts, etc.</p></blockquote><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">op.</span><span style="color:#79C0FF;">SetPath</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;C:</span><span style="color:#79C0FF;">\\\\</span><span style="color:#A5D6FF;">test</span><span style="color:#79C0FF;">\\\\</span><span style="color:#A5D6FF;">res&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h3 id="findpic" tabindex="-1"><a class="header-anchor" href="#findpic" aria-hidden="true">#</a> FindPic</h3><h4 id="function-introduction-3" tabindex="-1"><a class="header-anchor" href="#function-introduction-3" aria-hidden="true">#</a> Function introduction:</h4><blockquote><p>Find the picture in the specified area. The bitmap must be in 24-bit color format and support transparent color. When the color of the 4 vertices on the top, bottom, left, and right of the image is the same, this color will be treated as a transparent color. This function can look up multiple images and only returns the X Y coordinates of the first found.</p></blockquote><h4 id="function-prototype" tabindex="-1"><a class="header-anchor" href="#function-prototype" aria-hidden="true">#</a> Function prototype:</h4><div class="language-vb ext-vb line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">long </span><span style="color:#D2A8FF;">FindPic</span><span style="color:#C9D1D9;">(x1, y1, x2, y2, pic_name, delta_color,sim, dir,intX, intY)   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="parameter-definition" tabindex="-1"><a class="header-anchor" href="#parameter-definition" aria-hidden="true">#</a> Parameter definition:</h4><blockquote><p>x1 integer: the upper left X coordinate of the area<br> y1 integer: the upper left Y coordinate of the region<br> x2 integer: the lower right X coordinate of the area<br> y2 integer: the lower right Y coordinate of the region<br> pic_name String: picture name, can be multiple pictures, such as &quot;test.bmp|test2.bmp|test3.bmp&quot;<br> delta_color string: color shift such as &quot;203040&quot; indicates that the color shift of RGB is 20 30 40 (here is the hexadecimal representation) sim double-precision floating-point number: similarity, value range 0.1-1.0<br> dir integer: search direction 0: left to right, top to bottom 1: left to right, bottom to top 2: right to left, top to bottom 3: right to left, bottom to superior<br> intX variable parameter pointer: returns the X coordinate of the upper left corner of the picture<br> intY variable parameter pointer: returns the Y coordinate of the upper left corner of the picture</p></blockquote><h4 id="return-value" tabindex="-1"><a class="header-anchor" href="#return-value" aria-hidden="true">#</a> return value:</h4><p>Integer number:</p><blockquote><p>Return the serial number of the found image, indexed from 0. If not found, return -1</p></blockquote><h4 id="example" tabindex="-1"><a class="header-anchor" href="#example" aria-hidden="true">#</a> Example:</h4><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#FF7B72;">local</span><span style="color:#C9D1D9;"> idx,x,y </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> op.</span><span style="color:#79C0FF;">FindPic</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">892</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">52</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">906</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">64</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;a.bmp&quot;</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;202020&quot;</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">0.9</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">-</span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">==</span><span style="color:#C9D1D9;"> idx </span><span style="color:#FF7B72;">then</span><span style="color:#C9D1D9;">   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Not found&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#FF7B72;">else</span><span style="color:#C9D1D9;">   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Found, the coordinates are &quot;</span><span style="color:#C9D1D9;">,x,y)   </span></span>\n<span class="line"><span style="color:#FF7B72;">end</span><span style="color:#C9D1D9;">   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br><span class="line-number">6</span><br></div></div><h3 id="capture" tabindex="-1"><a class="header-anchor" href="#capture" aria-hidden="true">#</a> Capture</h3><h4 id="function-introduction-4" tabindex="-1"><a class="header-anchor" href="#function-introduction-4" aria-hidden="true">#</a> Function introduction:</h4><blockquote><p>Grab the image of the specified area (x1, y1, x2, y2) and save it as a file (24-bit bitmap)</p></blockquote><h4 id="function-prototype-1" tabindex="-1"><a class="header-anchor" href="#function-prototype-1" aria-hidden="true">#</a> Function prototype:</h4><div class="language-vb ext-vb line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">long </span><span style="color:#D2A8FF;">Capture</span><span style="color:#C9D1D9;">(x1, y1, x2, y2, file)   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="parameter-definition-1" tabindex="-1"><a class="header-anchor" href="#parameter-definition-1" aria-hidden="true">#</a> Parameter definition:</h4><blockquote><p>x1 integer: the upper left X coordinate of the area<br> y1 integer: the upper left Y coordinate of the region<br> x2 integer: the lower right X coordinate of the area<br> y2 integer: the lower right Y coordinate of the region<br> file String: The name of the file to be saved, the place to save is generally the directory set in SetPath, of course, the full path name can also be specified here.</p></blockquote><h4 id="return-value-1" tabindex="-1"><a class="header-anchor" href="#return-value-1" aria-hidden="true">#</a> return value:</h4><blockquote><p>0: failed<br> 1: success</p></blockquote><h4 id="example-1" tabindex="-1"><a class="header-anchor" href="#example-1" aria-hidden="true">#</a> Example:</h4><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">ret </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> op.</span><span style="color:#79C0FF;">Capture</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">2000</span><span style="color:#C9D1D9;">,</span><span style="color:#79C0FF;">2000</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;screen.bmp&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#FF7B72;">if</span><span style="color:#C9D1D9;"> </span><span style="color:#79C0FF;">1</span><span style="color:#C9D1D9;"> </span><span style="color:#FF7B72;">==</span><span style="color:#C9D1D9;"> ret </span><span style="color:#FF7B72;">then</span><span style="color:#C9D1D9;">   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#79C0FF;">print</span><span style="color:#C9D1D9;">(</span><span style="color:#A5D6FF;">&quot;Successful screenshot&quot;</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"><span style="color:#FF7B72;">end</span><span style="color:#C9D1D9;">   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br></div></div><h3 id="setshowerrormsg" tabindex="-1"><a class="header-anchor" href="#setshowerrormsg" aria-hidden="true">#</a> SetShowErrorMsg</h3><h4 id="function-introduction-5" tabindex="-1"><a class="header-anchor" href="#function-introduction-5" aria-hidden="true">#</a> Function introduction:</h4><blockquote><p>Set whether to pop up an error message, the default is open.</p></blockquote><h4 id="function-prototype-2" tabindex="-1"><a class="header-anchor" href="#function-prototype-2" aria-hidden="true">#</a> Function prototype:</h4><div class="language-vb ext-vb line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">long </span><span style="color:#D2A8FF;">SetShowErrorMsg</span><span style="color:#C9D1D9;">(show)   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><h4 id="parameter-definition-2" tabindex="-1"><a class="header-anchor" href="#parameter-definition-2" aria-hidden="true">#</a> Parameter definition:</h4><blockquote><p>show 0 means not open, 1 means open, 2 means write error information to the file</p></blockquote><h4 id="return-value-2" tabindex="-1"><a class="header-anchor" href="#return-value-2" aria-hidden="true">#</a> return value:</h4><blockquote><p>0 : failed<br> 1 : success</p></blockquote><h4 id="example-2" tabindex="-1"><a class="header-anchor" href="#example-2" aria-hidden="true">#</a> Example:</h4><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">op_ret </span><span style="color:#FF7B72;">=</span><span style="color:#C9D1D9;"> op.</span><span style="color:#79C0FF;">SetShowErrorMsg</span><span style="color:#C9D1D9;">(</span><span style="color:#79C0FF;">0</span><span style="color:#C9D1D9;">)   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br></div></div><hr><h2 id="game" tabindex="-1"><a class="header-anchor" href="#game" aria-hidden="true">#</a> game</h2><h3 id="loadres" tabindex="-1"><a class="header-anchor" href="#loadres" aria-hidden="true">#</a> LoadRes</h3><blockquote><p>Load a script module, after loading, you can use the functions provided by the module</p></blockquote><div class="language-lua ext-lua line-numbers-mode"><pre class="shiki" style="background-color:#0d1117;"><code><span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">-- _PATH here is a system variable that specifies the directory where the script is currently running   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">-- The parameters are path, format, _ENV (the current format and _ENV are fixed writing, just copy)   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">-- Load the base.psr module in the current script directory   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    game.</span><span style="color:#79C0FF;">LoadRes</span><span style="color:#C9D1D9;">( _PATH </span><span style="color:#FF7B72;">..</span><span style="color:#C9D1D9;"> </span><span style="color:#A5D6FF;">&quot;base.psr&quot;</span><span style="color:#C9D1D9;">,</span><span style="color:#A5D6FF;">&quot;bt&quot;</span><span style="color:#C9D1D9;">,_ENV)   </span></span>\n<span class="line"><span style="color:#C9D1D9;">    </span><span style="color:#8B949E;">-- After loading, you can call the function in base.psr   </span></span>\n<span class="line"></span></code></pre><div class="line-numbers"><span class="line-number">1</span><br><span class="line-number">2</span><br><span class="line-number">3</span><br><span class="line-number">4</span><br><span class="line-number">5</span><br></div></div><h2 id="host-function" tabindex="-1"><a class="header-anchor" href="#host-function" aria-hidden="true">#</a> Host function</h2><p>Ok, the basic introduction is over, choose your host below, and start to introduce the special functions of different hosts</p><h3 id="xbox" tabindex="-1"><a class="header-anchor" href="#xbox" aria-hidden="true">#</a> <a href="xbox">XBOX</a></h3><h3 id="playstation" tabindex="-1"><a class="header-anchor" href="#playstation" aria-hidden="true">#</a> <a href="playstation">PlayStation</a></h3><h3 id="switch" tabindex="-1"><a class="header-anchor" href="#switch" aria-hidden="true">#</a> <a href="switch">Switch</a></h3>',76),b={},y=(0,s(4110).Z)(b,[["render",function(e,a){const s=(0,n.up)("OutboundLink"),b=(0,n.up)("RouterLink");return(0,n.wg)(),(0,n.iD)(n.HY,null,[l,(0,n._)("ul",null,[(0,n._)("li",null,[o,(0,n._)("a",r,[t,(0,n.Wm)(s)]),p]),i]),c,(0,n._)("ul",null,[(0,n._)("li",null,[(0,n.Wm)(b,{to:"/en_US/developer/xbox.html"},{default:(0,n.w5)((()=>[d])),_:1})]),(0,n._)("li",null,[(0,n.Wm)(b,{to:"/en_US/developer/playstation.html"},{default:(0,n.w5)((()=>[u])),_:1})])]),h],64)}]])},8277:(e,a,s)=>{s.r(a),s.d(a,{data:()=>n});const n={key:"v-ed5af9a2",path:"/en_US/developer/base.html",title:"LUA API",lang:"en-US",frontmatter:{head:[["meta",{property:"og:url",content:"/en_US/developer/base.html"}],["meta",{property:"og:site_name",content:"GameAI.win"}],["meta",{property:"og:title",content:"LUA API"}],["meta",{property:"og:type",content:"article"}],["meta",{property:"og:locale",content:"en-US"}],["meta",{property:"og:locale:alternate",content:"zh-TW"}],["meta",{name:"twitter:card",content:"summary_large_image"}],["meta",{name:"twitter:image:alt",content:"GameAI.win"}],["meta",{property:"article:author",content:"JiaZeng"}],["meta",{property:"og:restrictions:age",content:"3+"}],["meta",{name:"twitter:creator",content:"UMajs"}]]},excerpt:"",headers:[{level:2,title:"Base library",slug:"base-library",children:[]},{level:2,title:"Host library",slug:"host-library",children:[]},{level:2,title:"Basic introduction",slug:"basic-introduction",children:[{level:3,title:"Scripting infrastructure",slug:"scripting-infrastructure",children:[]},{level:3,title:"Global variables",slug:"global-variables",children:[]}]},{level:2,title:"Global function",slug:"global-function",children:[{level:3,title:"print",slug:"print",children:[]},{level:3,title:"wait",slug:"wait",children:[]},{level:3,title:"sleep",slug:"sleep",children:[]},{level:3,title:"load_module",slug:"load-module",children:[]}]},{level:2,title:"op",slug:"op",children:[{level:3,title:"Ver",slug:"ver",children:[]},{level:3,title:"SetPath",slug:"setpath",children:[]},{level:3,title:"FindPic",slug:"findpic",children:[]},{level:3,title:"Capture",slug:"capture",children:[]},{level:3,title:"SetShowErrorMsg",slug:"setshowerrormsg",children:[]}]},{level:2,title:"game",slug:"game",children:[{level:3,title:"LoadRes",slug:"loadres",children:[]}]},{level:2,title:"Host function",slug:"host-function",children:[{level:3,title:"XBOX",slug:"xbox",children:[]},{level:3,title:"PlayStation",slug:"playstation",children:[]},{level:3,title:"Switch",slug:"switch",children:[]}]}],filePathRelative:"en_US/developer/base.md",git:{updatedTime:164691705e4,contributors:[{name:"master",email:"master@gameai.win",commits:1}]}}},4110:(e,a)=>{a.Z=(e,a)=>{for(const[s,n]of a)e[s]=n;return e}}}]);